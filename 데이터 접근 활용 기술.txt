섹션1) 데이터 접근 기술 - 시작                 -----------------------------------------------------------------------------------------------
[데이터 접근 기술 진행 방식 소개]
1. SQL Mapper 주요기능
  a) 개발자는 SQL만 작성하면 해당 SQL의 결과를 객체로 편리하게 매핑해준다.
  b) JDBC를 직접 사용할 때 발생하는 여러가지 중복을 제거해주고, 기타 개발자에게 여러가지 편리한 기능을 제공한다.

2. ORM 주요 기능
  a) JdbcTemplate나 Mybatis 같은 SQL 매퍼 기술은 SQL을 개발자가 직접 작성해야하지만, JPA를 사용하면 기본적인 SQL은 JPA가 대신 작성하고 처리해준다.
  b) JPA는 자바 진영의 ORM 표준이고, Hibernate는 JPA에서 가장 많이 사용하는 구현체이다.
     자바에서 ORM을 사용할 때는 JPA 인터페이스를 사용하고 구현체로는 Hibernate를 사용한다고 생각하면 된다.
  c) 스프링 데이터 JPA, Querydsl은 JPA를 더 편리하게 사용할 수 있게 도와주는 프로젝트이다.
     실무에서는 JPA를 사용하면 이 프로젝트도 꼭! 함께사용하는 것이 좋다.

[프로젝트 구조 설명2-설정]
1. @Import는 주로 @Configration이 있는 class 파일을 bean 등록할 때 사용한다.
2. 스프링은 로딩 시점에 application.properties의 spring.profiles.active 속성을 읽어서 프로필로 사용한다.
   다른환경에 다른Bean 등록시에도 사용
   EX) @Profile("local") 등

섹션2) 데이터 접근 기술 - 스프링 JdbcTemplate     -----------------------------------------------------------------------------------------------
[JdbcTemplate 기능 정리]
1. JdbcTemplate : 순서 기반의 파라미터 바인딩 지원
2. NamedParameterJdbcTemplate : 이름 기반 파라미터 바인딩 지원 (권장)
3. SimpleJdbcInser : INSERT SQL을 편리하게 사용할 수 있다.
4. SimpleJdbcCall : 스토어드 프로시저를 편리하게 호출할 수 있다.

